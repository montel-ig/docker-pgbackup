##############################
## POSTGRESQL BACKUP CONFIG ##
##############################

# Optional system user to run backups as.  If the user the script is running as doesn't match this
# the script terminates.  Leave blank to skip check.
BACKUP_USER=

# Optional hostname to adhere to pg_hba policies.  Will default to "localhost" if none specified.
HOSTNAME=$PGHOST

# Optional username to connect to database as.  Will default to "postgres" if none specified.
USERNAME=$PGUSER

# Clean backups older than x days
ENABLE_REMOVE_BACKUPS=${ENABLE_REMOVE_BACKUPS:-no}
CLEAN_BACKUPS_OLDER_THAN_DAYS=${CLEAN_BACKUPS_OLDER_THAN_DAYS:-10}


# This dir will be created if it doesn't exist.  This must be writable by the user the script is
# running as.
BACKUP_DIR=/backups/

# List of strings to match against in database name, separated by space or comma, for which we only
# wish to keep a backup of the schema, not the data. Any database names which contain any of these
# values will be considered candidates. (e.g. "system_log" will match "dev_system_log_2010-01")
SCHEMA_ONLY_LIST=""

# Will produce a custom-format backup if set to "yes"
ENABLE_CUSTOM_BACKUPS=${ENABLE_CUSTOM_BACKUPS:-yes}

# Will produce a gzipped plain-format backup if set to "yes"
ENABLE_PLAIN_BACKUPS=${ENABLE_PLAIN_BACKUPS:-yes}


# Use --clean and --if-exists
ENABLE_CLEAN_OPT=${ENABLE_CLEAN_OPT:-no}

# add timestamp to backup file ( allows multiple backups per day )
ENABLE_TIMESTAMP_OPT=${ENABLE_TIMESTAMP_OPT:-no}


#### SETTINGS FOR ROTATED BACKUPS ####

# Which day to take the weekly backup from (1-7 = Monday-Sunday)
DAY_OF_WEEK_TO_KEEP=${DAY_OF_WEEK_TO_KEEP:-5}

# Number of days to keep daily backups
DAYS_TO_KEEP=${DAYS_TO_KEEP:-7}

# How many weeks to keep weekly backups
WEEKS_TO_KEEP=${WEEKS_TO_KEEP:-5}

######################################
